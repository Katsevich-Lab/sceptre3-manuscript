library(sceptre)
library(sceptredata)
library(ggplot2)
# "grna_GACCTCC", "grna_TCCATAG"
data(highmoi_example_data)
data(grna_target_data_frame_highmoi)
response_matrix <- highmoi_example_data$response_matrix
grna_matrix <- highmoi_example_data$grna_matrix
rownames(grna_matrix)[rownames(grna_matrix) == "grna_GACCTCC"] <- "gRNA 1"
rownames(grna_matrix)[rownames(grna_matrix) == "grna_TCCATAG"] <- "gRNA 2"
grna_target_data_frame_highmoi$grna_id[grna_target_data_frame_highmoi$grna_id == "grna_GACCTCC"] <- "gRNA 1"
grna_target_data_frame_highmoi$grna_id[grna_target_data_frame_highmoi$grna_id == "grna_TCCATAG"] <- "gRNA 2"
sceptre_object <- import_data(
response_matrix = highmoi_example_data$response_matrix,
grna_matrix = grna_matrix,
grna_target_data_frame = grna_target_data_frame_highmoi,
moi = "high",
extra_covariates = highmoi_example_data$extra_covariates,
response_names = highmoi_example_data$gene_names
)
# 2. set the analysis parameters
positive_control_pairs <- construct_positive_control_pairs(sceptre_object)
discovery_pairs <- construct_cis_pairs(sceptre_object,
positive_control_pairs = positive_control_pairs,
distance_threshold = 5e6
)
sceptre_object <- set_analysis_parameters(
sceptre_object = sceptre_object,
discovery_pairs = discovery_pairs,
positive_control_pairs = positive_control_pairs,
side = "left"
)
print(sceptre_object)
# 3. assign grnas
plot_grna_count_distributions(sceptre_object)
sceptre_object <- sceptre_object |> assign_grnas(parallel = TRUE, n_processors = 2)
p_1 <- plot_assign_grnas(sceptre_object,
return_indiv_plots = TRUE,
grnas_to_plot = c("gRNA 1", "gRNA 2"),
point_size = 0.3)[[1]] + theme(axis.title.y = element_blank())
ggsave(filename = "~/research_code/sceptre3-project-v2/figs/aasign_grnas.png",
plot = p_1, device = "png", scale = 0.6, width = 4, height = 3.5, dpi = 330)
sceptre_object
r <- sceptre_object |> get_response_matrix()
r
# 2. set the analysis parameters
positive_control_pairs <- construct_positive_control_pairs(sceptre_object)
discovery_pairs <- construct_cis_pairs(sceptre_object,
positive_control_pairs = positive_control_pairs,
distance_threshold = 5e6
)
sceptre_object <- set_analysis_parameters(
sceptre_object = sceptre_object,
discovery_pairs = discovery_pairs,
positive_control_pairs = positive_control_pairs,
side = "left"
)
print(sceptre_object)
# 3. assign grnas
plot_grna_count_distributions(sceptre_object)
sceptre_object <- sceptre_object |> assign_grnas(parallel = TRUE, n_processors = 2)
p_1 <- plot_assign_grnas(sceptre_object,
return_indiv_plots = TRUE,
grnas_to_plot = c("gRNA 1", "gRNA 2"),
point_size = 0.3)[[1]] + theme(axis.title.y = element_blank())
ggsave(filename = "~/research_code/sceptre3-project-v2/figs/aasign_grnas.png",
plot = p_1, device = "png", scale = 0.6, width = 4, height = 3.5, dpi = 330)
# 4. run qc
plot_covariates(sceptre_object, p_mito_threshold = 0.075)
sceptre_object <- sceptre_object |> run_qc(p_mito_threshold = 0.075)
plot(sceptre_object)
print(sceptre_object)
# 5. run the calibration check
sceptre_object <- run_calibration_check(sceptre_object, parallel = TRUE, n_processors = 2)
plot(sceptre_object)
ps <- plot_run_calibration_check(sceptre_object = sceptre_object,
return_indiv_plots = TRUE)
gasp_offsite <- paste0(.get_config_path("LOCAL_GASPERINI_2019_V3_DATA_DIR"), "at-scale/processed/")
sceptre3_offsite <- paste0(.get_config_path("LOCAL_SCEPTRE3_DATA_DIR"), "nf_pipelines/gasp_trans/")
library(sceptre)
sceptre_object <- read_ondisc_backed_sceptre_object(
sceptre_object_fp = paste0(gasp_offsite, "sceptre_object.rds"),
response_odm_file_fp = paste0(gasp_offsite, "response.odm"),
grna_odm_file_fp = paste0(gasp_offsite, "grna.odm")
)
# set analysis params
sceptre_object <- set_analysis_parameters(
sceptre_object = sceptre_object,
resampling_mechanism = "permutations",
side = "both"
)
# update the grna target table; randomly assign nt grnas to groups of size 2
sceptre_object@grna_target_data_frame |> head()
# update the grna target table; randomly assign nt grnas to groups of size 2
sceptre_object@grna_target_data_frame |> dplyr::filter(grna_target == "non-targeting")
# update the grna target table; randomly assign nt grnas to groups of size 2
sceptre_object@grna_target_data_frame |> dplyr::filter(grna_target == "non-targeting") |> nrow()
# update the grna target table; randomly assign nt grnas to groups of size 2
grna_target_data_frame <- sceptre_object@grna_target_data_frame
nt_grp_size <- 2L
head(grna_target_data_frame)
grna_target_data_frame |> dplyr::filter(grna_target == "non-targeting")
nt_grna_df <- grna_target_data_frame |> dplyr::filter(grna_target == "non-targeting")
nt_grna_df
nrow(nt_grna_df)
nt_grna_df
nrow(nt_grna_df)
nrow(nt_grna_df)
n_nt_grnas <- nrow(nt_grna_df)
n_nt_grnas
n_nt_grnas / nt_grp_size
ceiling(n_nt_grnas/nt_grp_size)
seq_len(ceiling(n_nt_grnas/nt_grp_size))
sample(x = seq_len(ceiling(n_nt_grnas/nt_grp_size)), size = 2, replace = FALSE)
n_nt_grnas
ceiling(n_nt_grnas/2)
seq(from = 1, to = ceiling(n_nt_grnas/nt_grp_size), each = nt_grp_size)
rep(from = 1, to = ceiling(n_nt_grnas/nt_grp_size), each = nt_grp_size)
?rep
rep(seq_along(ceiling(n_nt_grnas/nt_grp_size)), each = nt_grp_size)
nt_grp_size
seq_along(ceiling(n_nt_grnas/nt_grp_size))
seq_len(ceiling(n_nt_grnas/nt_grp_size))
rep(seq_len(ceiling(n_nt_grnas/nt_grp_size)), each = nt_grp_size)
rep(seq_len(ceiling(n_nt_grnas/nt_grp_size)), each = nt_grp_size)[seq_len(n_nt_grnas)]
rep(seq_len(ceiling(n_nt_grnas/nt_grp_size)), each = nt_grp_size)[seq_len(n_nt_grnas)] |> sample()
# update the grna target table; randomly assign nt grnas to groups of size 2
set.seed(4)
grna_target_data_frame <- sceptre_object@grna_target_data_frame
nt_grp_size <- 2L
nt_grna_df <- grna_target_data_frame |> dplyr::filter(grna_target == "non-targeting")
n_nt_grnas <- nrow(nt_grna_df)
nt_ids <- rep(seq_len(ceiling(n_nt_grnas/nt_grp_size)), each = nt_grp_size)[seq_len(n_nt_grnas)] |> sample()
nt_ids
nt_ids <- paste0("nt_", sample(rep(seq_len(ceiling(n_nt_grnas/nt_grp_size)), each = nt_grp_size)[seq_len(n_nt_grnas)]))
nt_ids
?dplyr::mutate_at
grna_target_data_frame
nt_grna_df
nt_grna_df <- nt_grna_df |> dplyr::mutate(grna_target = nt_ids, grna_group = nt_ids)
nt_grna_df
head(nt_grna_df)
tail(nt_grna_df)
nt_grna_df
nrow(nt_grna_df)
nt_grna_df
nt_grna_df
grna_target_data_frame[grna_target_data_frame$grna_target == "non-targeting"]
grna_target_data_frame[grna_target_data_frame$grna_target == "non-targeting",]
grna_target_data_frame[grna_target_data_frame$grna_target == "non-targeting",] <- nt_grna_df
grna_target_data_frame
grna_target_data_frame
tail(grna_target_data_frame)
grna_target_data_frame
head( sceptre_object@grna_target_data_frame)
grna_target_data_frame |> dplyr::filter(grna_target == "non-targeting")
grna_target_data_frame |> dplyr::filter(chr == NA)
grna_target_data_frame |> dplyr::filter(is.na(chr))
grna_target_data_frame |> dplyr::filter(is.na(chr)) |> print()
grna_target_data_frame |> dplyr::filter(is.na(chr)) |> print(n = 100)
grna_target_data_frame |> dplyr::filter(is.na(chr)) |> print(n = 101)
identical(grna_target_data_frame,  sceptre_object@grna_target_data_frame)
grna_target_data_frame == sceptre_object@grna_target_data_frame
l <- grna_target_data_frame == sceptre_object@grna_target_data_frame
l |> class()
l |> tail()
l |> tail(50)
grna_target_data_frame
grna_target_data_frame |> dplyr::filter(is.na(chr))
